#!/usr/bin/env bash
# Usage: jtools sbt
# Summary: Manage your SBT installation
# Help: This command, along with its subcommands, allows you to install, update or remove SBT.
#
# jtools uses Paul Philips' script from https://github.com/paulp/sbt-extras.git to run SBT.
# Everything is stored in $JTOOLS_FOLDER (configurable, defaulting to ~/.jtools)
#
# 'jtools sbt install' :
#   - clones that repository into $JTOOLS_FOLDER/sbt
#   - creates a symlink into $JTOOLS_FOLDER/bins (this path is exposed through 'jtools path')
#
# 'jtools sbt update' simply runs a git pull to update the repository.
#
# 'jtools sbt remove' removes both the installation folder and the symlink.

set -e

# Provide jtools completions
if [ "$1" = "--complete" ]; then
	echo install
	echo update
	echo remove
	exit
fi

. $_JTOOLS_ROOT/libexec/commons
. $_JTOOLS_ROOT/libexec/git-tools

SBT_INSTALL_PATH=$JTOOLS_FOLDER/sbt
SBT_SHA_FILE="$JTOOLS_FOLDER/sbt_current_sha"

install_sbt() {
	clone_repo "SBT" $SBT_INSTALL_PATH $SBT_SHA_FILE "https://github.com/paulp/sbt-extras.git"
	create_symlink "$SBT_INSTALL_PATH/sbt" "sbt"
}

update_sbt() {
	update_git_repo "SBT" $SBT_INSTALL_PATH $SBT_SHA_FILE
}

remove_sbt() {
	result=$(yes_or_no "Are you sure you want to remove SBT ? [y/n] ")
	case "$result" in
		yes)
			rm -Rf $SBT_INSTALL_PATH
			remove_symlink "sbt"
			rm "$SBT_SHA_FILE"
			echo "SBT successfully removed.";;
		*) ;;
	esac
}


case "$1" in
	install)
		install_sbt;;
	remove)
		remove_sbt;;
	update)
		update_sbt;;
	*)
		jtools help sbt;;
esac
